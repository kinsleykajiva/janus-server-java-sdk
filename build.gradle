plugins {
    id 'maven-publish'
    id 'java-library'
    id 'signing'
//    id 'maven'

}

group = 'io.github.kinsleykajiva'
version = '0.6'
archivesBaseName = "janus-sdk"

repositories {
    mavenCentral()
}
java {
    withJavadocJar()
    withSourcesJar()
}
def env = new Properties()
file('.env').withInputStream { env.load(it) }



publishing {
    publications {
        myLib(MavenPublication) {

            groupId = group
            artifactId = 'janus-server-java-sdk'
            version =version
            from components.java
        }
        /*mavenJava(MavenPublication) {
            name = 'janus-server-java-sdk'
            description = 'janus-server-java-sdk'
            properties = [
            ]
            licenses {
                license {
                    name = 'The Apache License, Version 2.0'
                    url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                }
            }
            developers {
                developer {
                    id = 'io.github.kinsleykajiva'
                    name = 'Kinsley Kajiva'
                    email = 'kajivakinsley@gmail.com'
                }
            }
        }*/
    }
    repositories {
        maven {
            name = "janus-server-java-sdk"
            credentials {
                username = env.getProperty('PUBLISHING_USERNAME')
                password = env.getProperty('PUBLISHING_PASSWORD')
            }
        }
    }
}
artifacts {
    archives javadocJar, sourcesJar
}
signing {
    sign configurations.archives
}

var classifier = ''
// check if we are on windows
if (org.gradle.internal.os.OperatingSystem.current().isWindows()) {
    classifier = 'windows-x86_64'
} else if (org.gradle.internal.os.OperatingSystem.current().isLinux()) {
    classifier = 'linux-x86_64'
} else if (org.gradle.internal.os.OperatingSystem.current().isMacOsX()) {
    classifier = 'macosx-x86_64'
}
dependencies {
    implementation 'org.json:json:20231013'
    implementation "dev.onvoid.webrtc:webrtc-java:0.8.0"
    implementation group: "dev.onvoid.webrtc", name: "webrtc-java", version: "0.8.0", classifier: classifier
    implementation 'org.jetbrains:annotations:24.1.0'
    implementation 'com.mysql:mysql-connector-j:8.3.0'
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.mockito:mockito-core:5.10.0'

}
signing {
    sign publishing.publications.myLib
    /*keyId 'yourKeyId'
    password 'yourPassword'
    secretKeyRingFile file('path/to/your/secring.gpg')*/
}
test {
    useJUnitPlatform()
}
tasks.register('buildJar', Jar) {
    from sourceSets.main.output
    archiveBaseName.set('janus-server-java-sdk')
    archiveVersion.set(version)
    archiveExtension.set('jar')
}
javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}


